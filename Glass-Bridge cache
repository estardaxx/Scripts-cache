local player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "ScriptaxGUI"

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 140)
frame.Position = UDim2.new(0.5, -110, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Scriptax"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Parent = frame

-- ESP Button
local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(0.9, 0, 0, 40)
espButton.Position = UDim2.new(0.05, 0, 0, 40)
espButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
espButton.TextColor3 = Color3.new(1, 1, 1)
espButton.Font = Enum.Font.Gotham
espButton.TextSize = 16
espButton.Text = "Toggle ESP"
espButton.AutoButtonColor = false
espButton.BorderSizePixel = 0
espButton.Parent = frame

-- Teleport Button
local tpButton = Instance.new("TextButton")
tpButton.Size = UDim2.new(0.9, 0, 0, 40)
tpButton.Position = UDim2.new(0.05, 0, 0, 90)
tpButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
tpButton.TextColor3 = Color3.new(1, 1, 1)
tpButton.Font = Enum.Font.Gotham
tpButton.TextSize = 16
tpButton.Text = "Teleport"
tpButton.AutoButtonColor = false
tpButton.BorderSizePixel = 0
tpButton.Parent = frame

-- ESP logic
local espActive = false
local originalColors = {}

local function updateESP()
    local raiz = workspace:FindFirstChild("Regenator")
    if not raiz then return end
    local contenedor = raiz:FindFirstChild("Regenartor")
    if not contenedor then return end

    for _, model in ipairs(contenedor:GetChildren()) do
        if model:IsA("Model") then
            local modell = model:FindFirstChild("modell")
            if modell then
                for _, obj in ipairs(modell:GetChildren()) do
                    if obj:IsA("BasePart") then
                        if not originalColors[obj] then
                            originalColors[obj] = obj.Color
                        end
                        local hasTouch = obj:FindFirstChild("TouchInterest") ~= nil
                        obj.Color = hasTouch and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
                        obj.Material = Enum.Material.Neon
                    end
                end
            end
        end
    end
end

local function resetColors()
    for obj, color in pairs(originalColors) do
        if obj and obj:IsA("BasePart") then
            obj.Color = color
            obj.Material = Enum.Material.Plastic
        end
    end
    originalColors = {}
end

RunService.RenderStepped:Connect(function()
    if espActive then
        updateESP()
    end
end)

espButton.MouseButton1Click:Connect(function()
    espActive = not espActive
    espButton.Text = espActive and "ESP ON" or "ESP OFF"
    if espActive then
        updateESP()
    else
        resetColors()
    end
end)

tpButton.MouseButton1Click:Connect(function()
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char:MoveTo(Vector3.new(-0.7761471271514893, 555.5330200195312, -288.62420654296875))
    end
end)

-- Auto-refresh when crystals change
local raiz = workspace:WaitForChild("Regenator")
local contenedor = raiz:WaitForChild("Regenartor")

contenedor.ChildAdded:Connect(function()
    if espActive then
        task.wait(0.1)
        updateESP()
    end
end)

contenedor.ChildRemoved:Connect(function()
    if espActive then
        task.wait(0.1)
        updateESP()
    end
end)
